EXTRN READ_ACTION  : NEAR
EXTRN READ_SB_NUM  : NEAR ;READ SIGNED BINARY NUMBER
EXTRN PRINT_UD_NUM : NEAR ;PRINT UNSIGNED DECIMAL NUMBER
EXTRN PRINT_SH_NUM : NEAR ;PRINT SIGNED HEXDECIMAL NUMBER

SSEG SEGMENT PARA STACK 'STACK'
	DB 200H DUP (0)
SSEG ENDS

DSEG SEGMENT PARA PUBLIC 'DATA'
	MENU DB 13, 10, 13, 10, 'AVAILABLE ACTIONS:', 13, 10, 13, 10
		DB '1) Enter signed number in binary notaion', 13, 10
		DB '2) Print entered number in unsigned decimal notaion', 13, 10
		DB '3) Print enetered number in signed hexdecimal notaion', 13, 10
		DB '4) Exit', 13, 10, 13, 10
		DB 'CHOOSE ACTION: $'
	ACTIONS DW READ_SB_NUM, PRINT_UD_NUM, PRINT_SH_NUM, EXIT_FUNC
DSEG ENDS

CSEG SEGMENT PARA PUBLIC 'CODE'
	ASSUME CS:CSEG, DS:DSEG, SS:SSEG
	
OUTPUT_MENU PROC NEAR
	MOV AH, 09H
	MOV DX, OFFSET MENU
	INT 21H
	RET
OUTPUT_MENU ENDP
	
EXIT_FUNC PROC NEAR
	MOV AX, 4C00H
	INT 21H
EXIT_FUNC ENDP

MAIN:
	MOV AX, DSEG
	MOV DS, AX
	
	MAIN_LOOP:
		CALL OUTPUT_MENU
		CALL READ_ACTION
		CALL ACTIONS[SI]
		JMP MAIN_LOOP
		
CSEG ENDS
END MAIN