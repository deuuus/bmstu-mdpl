PUBLIC PRINT_UD_NUM
PUBLIC PRINT_SH_NUM

EXTRN NUMBER : WORD

DSEG SEGMENT PARA PUBLIC 'DATA'
	MASK2 DW 1
	MASK16 DW 15
	MASK_SIGN DW 32768
	CNV_MSG DB 13, 10, 13, 10, "Converted number: $"
	BUFFER DB 20 DUP('$')
DSEG ENDS

CSEG SEGMENT PARA PUBLIC 'CODE'
	ASSUME DS:DSEG, CS:CSEG

PRINT_UD_NUM PROC NEAR

	MOV AX, 1 ;Счетчик степени
	MOV DI, 16 ;Счетчик цикла
	MOV BX, 0 ;Переведенное число
	MOV CX, NUMBER
	
	CONVERT:
		MOV DX, CX
		AND DX, MASK2
		
		CMP DX, 0
		JE IND

		ADD BX, AX
		
		IND:
		
		MOV DX, 2
		MUL DX
		SHR CX, 1
		DEC DI
		JNZ CONVERT
		
	MOV AX, BX
	MOV CX, 10
	MOV SI, 0
	
	digit_to_symb:
		XOR DX, DX
		DIV CX
		XCHG AX, DX
		ADD AL, '0'
		MOV BUFFER[SI], AL
		INC SI
		XCHG AX, DX
		OR AX, AX
		JNE digit_to_symb

	MOV AH, 09h
	MOV DX, OFFSET CNV_MSG
	INT 21h
	
	MOV AH, 02h
	DEC SI
	
	REVERT:
		MOV DL, BUFFER[SI]
		INT 21h
		DEC SI
		CMP SI, -1
		JNE REVERT
	
	RET
PRINT_UD_NUM ENDP

PRINT_SH_NUM PROC NEAR

	MOV DI, 4 ;Счетчик цикла
	MOV SI, 0 ;Индексация буффера
	MOV BX, NUMBER
	
	MOV AX, NUMBER
	AND AX, MASK_SIGN
	CMP AX, MASK_SIGN
	JNE CONVERT
	
	DEC BX
	NOT BX
	
	CONVERT:
		MOV DX, BX
		AND DX, MASK16
		
		CMP DL, 10
		JB IS_DIGIT
		
		ADD DL, 7
		
		IS_DIGIT:
		ADD DL, '0'
		MOV BUFFER[SI], DL
		MOV CL, 4
		SHR BX, CL
		INC SI
		DEC DI
		JNZ CONVERT
	
	MOV CX, AX
		
	MOV AH, 09H
	MOV DX, OFFSET CNV_MSG
	INT 21H
	
	MOV AH, 02H
	MOV DI, 3
	
	CMP CX, MASK_SIGN
	JNE DEL
	MOV DL, '-'
	INT 21H
	XOR CX, CX

	DEL_LED_ZEROS:
		MOV CL, BUFFER[DI]
		CMP CX, '0'
		JNE REVERT
		DEC DI
		JNZ DEL_LED_ZEROS
		
	REVERT:
		MOV DL, BUFFER[DI]
		INT 21H
		DEC DI
		MOV DX, DI
		CMP DX, -1
		JNE REVERT
		
	RET
PRINT_SH_NUM ENDP

CSEG ENDS
END